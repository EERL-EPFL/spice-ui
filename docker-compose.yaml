services:
  traefik:
    image: traefik:v2.9.6
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "88:80"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  spice-api:
    build:
      context: ../spice-api
      dockerfile: Dockerfile.dev # Uses the dockerfile containing cargo-watch
    environment:
      - DB_HOST=spice-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=psql
      - DB_NAME=postgres
      - DB_PREFIX=postgresql
      - KEYCLOAK_UI_ID=aeea9d0c-97a9-4658-aee7-003dff8e9653
      - KEYCLOAK_REALM=test
      - KEYCLOAK_URL=http://spice-keycloak:8888/
      - S3_BUCKET_ID=spice-dev
      - S3_URL=http://mock-s3:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - DEPLOYMENT=local
      - APP_NAME=spice-api
    ports:
      - 3005:3000
    depends_on:
      - spice-db
      - spice-keycloak
      - mock-s3
    volumes:
      - ../spice-api/src:/app/src
      - spice-api-data:/app/target # Store builds in docker volume
      - ../spice-api/Cargo.toml:/app/Cargo.toml
      - ../spice-api/Cargo.lock:/app/Cargo.lock
      - ../crudcrate:/crudcrate
      - ../crudcrate-derive:/crudcrate-derive
    labels:
      - "traefik.http.routers.spice-api.rule=Host(`spice`) && PathPrefix(`/api`)"
      - "traefik.http.routers.spice-api.priority=100"
      - "traefik.http.services.spice-api.loadbalancer.server.port=3000"

  spice-ui:
    build:
      context: .
      dockerfile: Dockerfile.dev # Uses the dockerfile containing yarn dev
    environment:
      - VITE_KEYCLOAK_CLIENT_ID=aeea9d0c-97a9-4658-aee7-003dff8e9653
      - VITE_KEYCLOAK_REALM=test
      - VITE_KEYCLOAK_URL=http://spice-keycloak:88/
    labels:
      - "traefik.http.routers.spice-ui.rule=Host(`spice`)"
      - "traefik.http.routers.spice-ui.priority=1"
      - "traefik.http.services.spice-ui.loadbalancer.server.port=5173"
    volumes:
      - ../spice-ui:/app

  spice-db:
    image: postgis/postgis:17-master
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
      - POSTGRES_DB=postgres
    ports:
      - 5433:5432
    volumes:
      - spice-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  spice-keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: dev-file
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8888
      KC_HOSTNAME: spice-keycloak
      KC_HOSTNAME_PORT: 8888
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
    ports:
      - "8888:8888"
    volumes:
      - ./keycloak-realm-dev.json:/opt/keycloak/data/import/realm-export.json:ro
    labels:
      - "traefik.http.routers.spice-keycloak.rule=Host(`spice-keycloak`)"
      - "traefik.http.routers.spice-keycloak.priority=50"
      - "traefik.http.services.spice-keycloak.loadbalancer.server.port=8888"

  mock-s3:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - spice-s3-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # s3-setup:
  #   image: minio/mc:latest
  #   depends_on:
  #     mock-s3:
  #       condition: service_healthy
  #   entrypoint: >
  #     /bin/sh -c "
  #     mc alias set local http://mock-s3:9000 minioadmin minioadmin;
  #     mc mb local/spice-dev --ignore-existing;
  #     mc anonymous set public local/spice-dev;
  #     echo 'S3 bucket initialized';
  #     "
  #   restart: "no"

  # Test runner uses SQLite in memory for tests
#  spice-test-runner:
#    build:
#      context: ../spice-api
#      dockerfile: Dockerfile.test
#    volumes:
#      - ../spice-api:/app

volumes:
  spice-db-data:
  spice-api-data:
  spice-test-target:
  spice-s3-data:
