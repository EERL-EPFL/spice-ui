services:
  traefik:
    image: traefik:v2.9.6
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "88:80"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  spice-api:
    build:
      context: ../spice-api
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing cargo-watch
    environment:
      - DB_HOST=spice-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=psql
      - DB_NAME=postgres
      - DB_PREFIX=postgresql
      - KEYCLOAK_UI_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - S3_BUCKET_ID=${S3_BUCKET_ID}
      - S3_URL=${S3_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - DEPLOYMENT=local
      - APP_NAME=spice-api
    ports:
      - 3005:3000
    depends_on:
        - spice-db
    volumes:
      - ../spice-api/src:/app/src
      - spice-api-data:/app/target  # Store builds in docker volume
      - ../spice-api/Cargo.toml:/app/Cargo.toml
      - ../spice-api/Cargo.lock:/app/Cargo.lock
      - ../crudcrate:/crudcrate
      - ../crudcrate-derive:/crudcrate-derive
    labels:
      - "traefik.http.routers.spice-api.rule=Host(`spice`) && PathPrefix(`/api`)"
      - "traefik.http.routers.spice-api.priority=100"
      - "traefik.http.services.spice-api.loadbalancer.server.port=3000"

  spice-ui:
    build:
      context: .
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing yarn dev
    labels:
      - "traefik.http.routers.spice-ui.rule=Host(`spice`)"
      - "traefik.http.routers.spice-ui.priority=1"
      - "traefik.http.services.spice-ui.loadbalancer.server.port=5173"
    volumes:
      - ../spice-ui:/app

  spice-db:
    image: postgis/postgis:17-master
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
      - POSTGRES_DB=postgres
    ports:
      - 5433:5432
    volumes:
      - spice-db-data:/var/lib/postgresql/data


  # spice-test-db:
  #   image: postgis/postgis:17-master
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=psql
  #     - POSTGRES_DB=spice_test
  #   tmpfs:
  #     - /var/lib/postgresql/data:noexec,nosuid,size=500m
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 2s
  #     timeout: 5s
  #     retries: 10

  # Test runner uses SQLite in memory for tests, psql (above) is not required
  spice-test-runner:
    build:
      context: ../spice-api
      dockerfile: Dockerfile.test
    environment:
      - DB_HOST=spice-test-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=psql
      - DB_NAME=spice_test
      - DB_PREFIX=postgresql
      - RUST_LOG=info
      - DEPLOYMENT=test
    # depends_on:
    #   spice-test-db:
    #     condition: service_healthy
    volumes:
      - ../spice-api/src:/app/src
      - ../spice-api/entity:/app/entity
      - ../spice-api/migration:/app/migration
      - ../spice-api/Cargo.toml:/app/Cargo.toml
      - ../spice-api/Cargo.lock:/app/Cargo.lock
      - ../spice-api/dummy_data.sql:/app/dummy_data.sql
      - spice-test-target:/app/target
    working_dir: /app


volumes:
  spice-db-data:
  spice-api-data:
  spice-test-target:
